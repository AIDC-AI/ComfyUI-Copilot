import showcases from '../../../../../public/showcase/showcase.json';
import showcases_en from '../../../../../public/showcase/showcase_en.json';
import { useChatContext } from '../../../context/ChatContext';
import { app } from '../../../utils/comfyapp';
import { generateUUID } from '../../../utils/uuid';
import { BaseMessage } from './BaseMessage';

const OFFSET = 2;

const ICONS = [
  <svg t="1752732936328" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="27395" width="16" height="16"><path d="M149.333333 661.333333h213.333334v213.333334H149.333333zM753.066667 411.733333l-119.466667-119.466666c-8.533333-8.533333-8.533333-21.333333 0-29.866667l119.466667-119.466667c8.533333-8.533333 21.333333-8.533333 29.866666 0l119.466667 119.466667c8.533333 8.533333 8.533333 21.333333 0 29.866667l-119.466667 119.466666c-8.533333 8.533333-21.333333 8.533333-29.866666 0z" fill="#1296db" p-id="27396"></path><path d="M256 277.333333m-128 0a128 128 0 1 0 256 0 128 128 0 1 0-256 0Z" fill="#1296db" p-id="27397"></path><path d="M768 768m-128 0a128 128 0 1 0 256 0 128 128 0 1 0-256 0Z" fill="#1296db" p-id="27398"></path><path d="M234.666667 512h42.666666v106.666667h-42.666666z" fill="#1296db" p-id="27399"></path><path d="M256 448l-64 85.333333h128z" fill="#1296db" p-id="27400"></path><path d="M426.666667 256h106.666666v42.666667h-106.666666z" fill="#1296db" p-id="27401"></path><path d="M597.333333 277.333333l-85.333333-64v128z" fill="#1296db" p-id="27402"></path><path d="M746.666667 448h42.666666v106.666667h-42.666666z" fill="#1296db" p-id="27403"></path><path d="M768 618.666667l64-85.333334h-128z" fill="#1296db" p-id="27404"></path></svg>,
  <svg t="1752729194808" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="11650" width="16" height="16"><path d="M512 1024C229.2224 1024 0 794.7776 0 512S229.2224 0 512 0s512 229.2224 512 512-229.2224 512-512 512z m0-53.9136a458.0864 458.0864 0 1 0 0-916.1728 458.0864 458.0864 0 0 0 0 916.1728z" fill="#1296db" p-id="11651"></path><path d="M363.5712 657.9712a8.8576 8.8576 0 0 1 8.8576 8.8576v143.5136A8.8576 8.8576 0 0 1 363.52 819.2H220.5184a8.8576 8.8576 0 0 1-8.8064-9.3184v-143.0528c0-4.864 3.9424-8.8576 8.8064-8.8576h143.0528z m222.6688 0c4.9152 0 8.96 3.9424 9.0624 8.8576v143.0528a9.1136 9.1136 0 0 1-9.0624 8.8064H443.392a9.1136 9.1136 0 0 1-9.1136-8.8064v-143.0528a9.1136 9.1136 0 0 1 9.1136-8.8576h142.7968z m216.5248 0c4.9152 0 8.96 3.9424 9.0624 8.8576v143.0528a9.1136 9.1136 0 0 1-9.0624 8.8064h-142.848a9.1136 9.1136 0 0 1-9.0624-8.8064v-143.0528a9.1136 9.1136 0 0 1 9.1136-8.8576h142.7968z m-25.1904 33.2288h-90.8288a5.7856 5.7856 0 0 0-5.7856 5.632v91.136c0.1024 3.1232 2.6624 5.632 5.7856 5.632h90.8288a5.7856 5.7856 0 0 0 5.7856-5.632v-91.136a5.7856 5.7856 0 0 0-5.7856-5.632z m-215.04 0H471.7056a5.7856 5.7856 0 0 0-5.7856 5.632v91.136c0.1024 3.1232 2.6624 5.632 5.7856 5.632h90.8288a5.7856 5.7856 0 0 0 5.7856-5.632v-91.136a5.7856 5.7856 0 0 0-5.7856-5.632z m-225.28 0H246.4256a5.7856 5.7856 0 0 0-5.7856 5.632v91.136c0.1024 3.1232 2.6624 5.632 5.7856 5.632h90.8288a5.7856 5.7856 0 0 0 5.7856-5.632v-91.136a5.7856 5.7856 0 0 0-5.7856-5.632zM608.8192 204.8H414.72c-6.3488 0-12.032 3.9424-12.032 8.8576v143.0016c0 4.9152 5.4272 8.8576 12.032 8.8576h194.1504c6.656 0 12.0832-3.9424 12.0832-8.8576V213.6576c0-4.9152-5.4272-8.8576-12.0832-8.8576z m53.3504 419.0208v-107.4176h-136.3968v107.1616h-27.2896v-107.1616H361.3696v107.4176h-27.2896V489.3696h163.6864V394.752h27.7504v94.6176h163.9424v134.4512h-27.2896zM584.6528 235.52c5.0176 0 9.1136 2.5088 9.2672 5.632v91.136c-0.1536 3.1232-4.2496 5.632-9.216 5.632H439.296c-4.9664 0-9.0624-2.5088-9.216-5.632V241.152c0.1536-3.1232 4.2496-5.632 9.216-5.632h145.408z" fill="#1296db" p-id="11652"></path></svg>,
  <svg t="1752729509637" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="22212" width="16" height="16"><path d="M114.0736 307.2l-1.4336 0.73728v418.33472L512 942.08V511.20128z" fill="#FFFFFF" p-id="22213"></path><path d="M930.73408 302.72512L521.3184 92.16 128.50176 294.07232l-15.86176 8.2944L521.3184 501.76l4.79232-2.16064L931.84 303.45216v-0.3584l-1.10592-0.36864zM526.11072 499.6096L521.3184 501.76l4.79232-2.16064z" fill="#91D5FF" p-id="22214"></path><path d="M1006.40768 264.31488a68.21888 68.21888 0 0 0-29.04064-30.39232L548.00384 7.68a67.51232 67.51232 0 0 0-62.49472 0L56.50432 232.448a66.44736 66.44736 0 0 0-17.64352 15.74912 73.25696 73.25696 0 0 0-11.02848 14.27456A67.87072 67.87072 0 0 0 20.48 291.76832v439.33696a67.33824 67.33824 0 0 0 36.7616 59.31008l428.99456 224.79872c9.32864 5.29408 19.79392 8.31488 30.5152 8.78592h5.15072a64.53248 64.53248 0 0 0 26.10176-6.9632L976.9984 792.25856A67.33824 67.33824 0 0 0 1013.76 732.93824V291.76832a64.23552 64.23552 0 0 0-7.35232-27.45344z m-80.50688 39.90528l-404.3776 199.168-4.77184 2.56v427.25376L107.60192 719.02208V303.85152l15.81056-8.41728L516.75136 89.67168l408.04352 213.8112 1.10592 0.73728z" fill="#40A9FF" p-id="22215"></path></svg>,
  <svg t="1752729587088" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="24973" width="16" height="16"><path d="M153.6 204.8a128 128 0 0 1 128-128h386.9696c21.6576 0 41.984 9.1136 56.6272 24.4736 14.7968 15.5648 37.888 39.168 59.904 58.88 18.688 16.6912 47.36 46.08 64.0512 63.3856 13.824 14.2336 21.248 33.28 21.248 52.8384V819.2a128 128 0 0 1-128 128h-460.8A128 128 0 0 1 153.6 819.2V204.8z m665.6 76.8v-5.2224a24.8832 24.8832 0 0 0-6.912-17.3056c-16.896-17.5616-44.288-45.568-61.3376-60.7744-23.552-21.0944-47.7696-45.8752-62.8736-61.7472a27.0336 27.0336 0 0 0-19.456-8.5504H665.6V256a25.6 25.6 0 0 0 25.6 25.6H819.2z m-204.8-153.6H281.6A76.8 76.8 0 0 0 204.8 204.8v614.4a76.8 76.8 0 0 0 76.8 76.8h460.8A76.8 76.8 0 0 0 819.2 819.2V332.8h-128A76.8 76.8 0 0 1 614.4 256V128zM332.8 307.2a25.6 25.6 0 0 1 25.6-25.6h102.4a25.6 25.6 0 1 1 0 51.2H358.4a25.6 25.6 0 0 1-25.6-25.6z m0 153.6a25.6 25.6 0 0 1 25.6-25.6h307.2a25.6 25.6 0 1 1 0 51.2H358.4a25.6 25.6 0 0 1-25.6-25.6z m0 153.6a25.6 25.6 0 0 1 25.6-25.6h307.2a25.6 25.6 0 1 1 0 51.2H358.4a25.6 25.6 0 0 1-25.6-25.6z" fill="#1296db" p-id="24974"></path></svg>,
  <svg t="1752729687983" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="26244" width="16" height="16"><path d="M960.547341 839.611479l0-656.56349c0-119.372761-102.850459-119.372761-119.385041-119.372761L184.573227 63.675228c-16.471137 0-119.346155 0-119.346155 119.372761l0 656.56349c0 119.378901 119.346155 119.378901 119.346155 119.378901l656.589073 0c34.458813 0 58.69582-10.053983 76.130911-24.249287 1.105171-0.816598 2.211365-1.633197 3.316535-2.533706 3.960195-3.497661 7.637957-7.231705 10.839883-11.109012 0.938372-1.105171 1.696642-2.301416 2.571568-3.496637C960.367239 883.154181 960.547341 839.611479 960.547341 839.611479L960.547341 839.611479zM187.453834 128.375809l645.788076 0c16.265452 0 58.69582 0 58.69582 58.721403l0 645.725654c0 0-0.115634 33.892925-25.998117 50.125631-43.075051-45.201481-161.341618-169.178097-191.248765-199.054545-22.205745-22.237467-45.170782-27.27725-59.160401-26.51898-30.048363 0.405229-49.489134 19.260669-50.891064 20.893866l-61.872163 53.919027c-12.562107 11.919471-22.964014 1.511423-28.004821-3.554966-37.827537-37.8347-111.092168-103.230106-120.311133-111.394043-6.055926-6.088672-27.502377-25.118074-58.426691-25.851784-16.175401-0.784876-40.720424 4.314259-65.343217 28.943193-22.938432 22.964014-66.950831 63.530942-101.925391 95.418186L128.755967 187.097212C128.756991 128.375809 171.252851 128.375809 187.453834 128.375809L187.453834 128.375809zM128.756991 830.636061l0-28.505217c26.873044-24.218588 110.809735-100.137675 147.1852-136.571469 4.718465-4.685719 11.186783-10.986215 18.361183-10.254551 7.522324 0.058328 14.400988 6.583952 14.452153 6.583952l0 0 2.391467 2.359744c0.822738 0.700965 80.207763 71.380724 118.408807 109.61349 23.298636 23.318078 47.188742 26.784016 62.052265 27.774577 32.92897-0.437975 54.736649-22.438035 54.91675-22.817682l61.782112-53.803393c6.351662-5.998621 12.292977-4.776793 21.215184 4.081968 23.080671 23.136953 102.991676 106.637716 156.185178 162.363901-139.251507-0.058328-540.893051-0.264013-594.22777-0.264013C126.776893 891.287419 128.756991 830.636061 128.756991 830.636061L128.756991 830.636061zM662.076552 549.130665c83.550904 0 151.582347-68.108191 151.582347-151.755286 0-83.672678-68.030419-151.755286-151.582347-151.755286-83.563184 0-151.581324 68.082608-151.581324 151.755286C510.495228 481.022475 578.513368 549.130665 662.076552 549.130665L662.076552 549.130665zM662.076552 309.59515c48.293913 0 87.575568 39.370683 87.575568 87.781252s-39.281655 87.754646-87.575568 87.754646-87.574544-39.3451-87.574544-87.754646S613.782639 309.59515 662.076552 309.59515L662.076552 309.59515zM662.076552 309.59515" fill="#1296db" p-id="26245"></path></svg>
]

const Showcase: React.FC = () => {
  const { dispatch, isAutoScroll, showcasIng } = useChatContext();

  const doStreamString = (data: any, isUser: boolean = false, cb: () => void = () => {}) => {
    let end = 0;
    const messageId = generateUUID();
    const func = (isFirst: boolean = false) => {
      if (!showcasIng.current)
        return;
      end += OFFSET
      const isString = typeof data === 'string';
      const str = isString ? data : data?.text || '';
      const message = isUser ? {
        id: messageId,
        role: "user",
        content: str.slice(0, end)
      } : {
        id: messageId,
        role: "ai",
        content: (end > str.length && !!data?.ext) ? 
          JSON.stringify({
            text: str.slice(0, end),
            ext: data?.ext,
          }) : JSON.stringify({
            text: str.slice(0, end)
          }
        ),
        finished: end > str.length,
        format:"markdown",
        name: "Assistant"
      }
      const type = isFirst ? 'ADD_MESSAGE' : 'UPDATE_MESSAGE';
      dispatch({ type, payload: message });
      if (end <= str.length) {
        setTimeout(() => {
          func()
        }, 10)
      } else {
        setTimeout(() => {
          cb()
        }, 500)
      }
    }
    func(true)
  }

  const addQuestion = (question: string, cb: () => void) => {
    dispatch({ type: 'SET_LOADING', payload: true });
    doStreamString(question, true, cb);
  }

  const addAnswer = (data: any, cb: () => void) => {
    dispatch({ type: 'SET_LOADING', payload: false });
    doStreamString(data, false, cb);
  }

  const getShowcaes = () => {
    const language = app.extensionManager.setting.get('Comfy.Locale')
    let list = showcases_en
    let title = 'welcome to ComfyUI Copilot!'
    switch (language) {
      case 'zh':
        title = '欢迎使用ComfyUI Copilot!'
        list = showcases
        break;
      case 'en':
      default:
        title = 'welcome to ComfyUI Copilot!'
        list = showcases_en
        break;
    }
    return {
      title,
      list
    };
  }

  return <BaseMessage name='showcase'>
    <div className='bg-gray-100 p-4 rounded-lg'>
      <div className='text-xl text-gray-900 font-extrabold text-center mb-4'>
        {getShowcaes()?.title}
      </div>
      {
        getShowcaes()?.list?.map((item, index) => <div 
          className='min-h-[50px] flex flex-row items-center mt-4 bg-showcase-bg shadow-[0_4px_24px_rgba(0,0,0,0.12)] hover:!shadow-[0_0_12px_2px_#3b82f6] hover:!shadow-[0_0_0_4px_rgba(59,130,246,0.15)] px-4 py-2 rounded-full'
          key={index.toString()}
          onClick={() => {
            isAutoScroll.current = true
            showcasIng.current = true
            const messages = item.messages || []
            let index = 0;
            const func = () => {
              if (index < messages.length) {
                const message = messages[index];
                if (message.role === 'user') {
                  addQuestion(message.content, func);
                } else {
                  addAnswer(JSON.parse(message.content || '{}') || '', func);
                }
                index++;
              }
            }
            func()
          }}
        >
          {ICONS[index]}
          <div className='flex-1 text-sm text-gray-900 font-normal ml-4'>
            {item.name}
          </div>
        </div>)
      }
    </div>
  </BaseMessage>
}

export default Showcase;